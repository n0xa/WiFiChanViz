#pragma once
#include "ImgFont.h"


// https://opengameart.org/content/new-original-grafx2-font-collection

// 846x9 @1bpp
const unsigned int font_Cursive1_png_len = 721;
const unsigned char font_Cursive1_png[font_Cursive1_png_len] =
{
  0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
  0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x03, 0x4e, 0x00, 0x00, 0x00, 0x09,
  0x01, 0x03, 0x00, 0x00, 0x00, 0x3f, 0xdb, 0xee, 0x8b, 0x00, 0x00, 0x00,
  0x06, 0x50, 0x4c, 0x54, 0x45, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xa5,
  0xd9, 0x9f, 0xdd, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00,
  0x00, 0x0e, 0xc4, 0x00, 0x00, 0x0e, 0xc4, 0x01, 0x95, 0x2b, 0x0e, 0x1b,
  0x00, 0x00, 0x00, 0x0f, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 0x66, 0x74,
  0x77, 0x61, 0x72, 0x65, 0x00, 0x47, 0x72, 0x61, 0x66, 0x78, 0x32, 0xa0,
  0xa2, 0x53, 0x6a, 0x00, 0x00, 0x02, 0x56, 0x49, 0x44, 0x41, 0x54, 0x28,
  0x91, 0xbd, 0xd3, 0x3f, 0x4f, 0xdb, 0x40, 0x14, 0x00, 0xf0, 0x77, 0x97,
  0x07, 0x7e, 0x48, 0x08, 0x9f, 0x23, 0x10, 0x41, 0x82, 0xe4, 0x1c, 0x22,
  0x35, 0xdd, 0x22, 0x75, 0x61, 0xa0, 0xc9, 0x39, 0xba, 0x4a, 0xe9, 0x54,
  0xb5, 0x33, 0x13, 0x5d, 0x3b, 0x30, 0x66, 0xe8, 0x70, 0x36, 0x46, 0x98,
  0xa1, 0x22, 0xb0, 0x75, 0x41, 0x74, 0xe0, 0x03, 0xf4, 0x1b, 0x84, 0x46,
  0x15, 0x6b, 0xbb, 0x75, 0x74, 0x25, 0x86, 0x8e, 0x51, 0xbb, 0x30, 0x54,
  0xa8, 0xcf, 0x4e, 0x61, 0xe8, 0xd2, 0x4e, 0xb5, 0x25, 0xdf, 0x1f, 0xdd,
  0xdd, 0xef, 0xbd, 0xbb, 0x33, 0xc0, 0xff, 0x7b, 0x28, 0xc0, 0x58, 0xaa,
  0xb1, 0x22, 0xc2, 0xb2, 0x8d, 0x35, 0x5a, 0xf2, 0xdc, 0x7e, 0x9e, 0x0f,
  0x6b, 0x8b, 0xdc, 0x34, 0x60, 0xf6, 0xb6, 0xa9, 0xe7, 0x1d, 0x5f, 0xfd,
  0xb8, 0x19, 0x26, 0x5d, 0x18, 0x0d, 0xb0, 0x4a, 0xc3, 0x9f, 0x75, 0xee,
  0xb9, 0xae, 0x2e, 0x60, 0x12, 0xf5, 0x0e, 0x09, 0x72, 0x03, 0x8a, 0x5f,
  0xd0, 0xd0, 0x01, 0x43, 0x82, 0x2a, 0x77, 0x8b, 0x8b, 0xdf, 0xe5, 0xda,
  0x41, 0xf3, 0xa5, 0x62, 0xca, 0x9f, 0x7c, 0x0c, 0xb5, 0x52, 0xb8, 0x22,
  0x4b, 0xba, 0x55, 0x0b, 0x28, 0x4e, 0x04, 0x64, 0xad, 0x2a, 0x0a, 0x70,
  0xa0, 0xb3, 0xfe, 0xb2, 0xce, 0x06, 0x2d, 0x09, 0x69, 0x42, 0x30, 0xca,
  0xe6, 0x1f, 0x51, 0x9a, 0x84, 0x3a, 0x8b, 0x90, 0x29, 0x1b, 0x09, 0x44,
  0xd0, 0xe7, 0x40, 0x33, 0x8a, 0x23, 0xe3, 0x25, 0xc4, 0x9f, 0x14, 0xc5,
  0xcd, 0x90, 0xbf, 0x80, 0xa9, 0x8c, 0x34, 0x68, 0xb9, 0x54, 0x52, 0xca,
  0x92, 0x10, 0x72, 0xff, 0x32, 0x57, 0xb6, 0xc9, 0x63, 0x2b, 0x53, 0x45,
  0x6f, 0x97, 0xf5, 0x88, 0x5a, 0x52, 0x00, 0x53, 0x27, 0x34, 0xf7, 0xe2,
  0x88, 0x93, 0xd1, 0x23, 0xc1, 0x54, 0xab, 0xdd, 0x94, 0x28, 0x21, 0x64,
  0x66, 0x69, 0xb5, 0x12, 0xe7, 0x79, 0xbe, 0xbd, 0x53, 0xab, 0x50, 0x3c,
  0xf7, 0x7e, 0x6f, 0x6b, 0xc7, 0x5f, 0xf5, 0x26, 0x49, 0x40, 0x89, 0x0d,
  0x1b, 0xf4, 0x46, 0x87, 0x9d, 0x82, 0xda, 0x77, 0x6e, 0xcc, 0xd4, 0x8a,
  0xef, 0x2a, 0x53, 0xd0, 0x96, 0xa4, 0x87, 0x2e, 0x54, 0x7a, 0x8b, 0x29,
  0xd6, 0xa9, 0x73, 0xd1, 0xec, 0x29, 0x7a, 0x30, 0xf9, 0xba, 0x7e, 0x4b,
  0x70, 0x46, 0x78, 0xfa, 0x14, 0xd3, 0xa8, 0xe7, 0xc7, 0x05, 0xa5, 0x96,
  0x91, 0x53, 0xd7, 0x1c, 0x62, 0x50, 0x4b, 0xfb, 0xa1, 0x32, 0x76, 0x97,
  0xc4, 0x82, 0x98, 0xff, 0x9c, 0xd9, 0xdd, 0xa0, 0x96, 0x09, 0x19, 0xd0,
  0x69, 0x3b, 0x94, 0x74, 0xa0, 0x39, 0x1c, 0xa6, 0x5c, 0x14, 0xb6, 0x99,
  0xe2, 0xf0, 0x1c, 0x1f, 0x8e, 0xa5, 0x45, 0x48, 0x0b, 0xca, 0xd6, 0x51,
  0x14, 0x59, 0xe9, 0x8b, 0xee, 0x2c, 0x2b, 0x2c, 0xb3, 0xc2, 0xea, 0x43,
  0xbc, 0x79, 0x12, 0x42, 0x84, 0x41, 0xd0, 0x6a, 0x17, 0x47, 0xec, 0x0a,
  0x2a, 0x54, 0x19, 0x6e, 0xe6, 0x26, 0xed, 0x93, 0xf0, 0x05, 0x9e, 0x50,
  0x01, 0x7b, 0xb1, 0x0c, 0xd4, 0xa9, 0x0a, 0x71, 0x46, 0x01, 0xf8, 0x57,
  0xc9, 0x73, 0x3e, 0x55, 0x84, 0x92, 0x72, 0x03, 0x52, 0x0b, 0xde, 0x87,
  0x48, 0xeb, 0x81, 0x2c, 0x7b, 0x34, 0x9c, 0xf1, 0x76, 0x0d, 0xac, 0x14,
  0x94, 0x50, 0xb1, 0x60, 0x75, 0x8d, 0x5c, 0x5f, 0x8f, 0x62, 0xd4, 0xe7,
  0x5f, 0x2c, 0xf1, 0x3c, 0x53, 0x50, 0x9b, 0x01, 0xe1, 0x2e, 0x98, 0xd7,
  0x4c, 0x51, 0xcc, 0x54, 0x66, 0x37, 0x15, 0x44, 0xb2, 0x73, 0xfe, 0xaa,
  0xdd, 0xa0, 0xfb, 0xac, 0x78, 0xd2, 0x37, 0x20, 0x2a, 0x4f, 0x31, 0x82,
  0x4e, 0xb7, 0x31, 0x0f, 0xb1, 0x1b, 0xeb, 0xce, 0xfa, 0xec, 0x06, 0x6a,
  0xc3, 0xdb, 0x75, 0x7c, 0xf8, 0x1d, 0xa6, 0x49, 0xb7, 0xae, 0x9e, 0x5d,
  0x57, 0x69, 0xea, 0x1e, 0xeb, 0x63, 0x51, 0x19, 0x9b, 0x2c, 0xa1, 0xde,
  0x21, 0xe8, 0x9c, 0x07, 0x6e, 0xd4, 0xbd, 0xc9, 0xbb, 0xa9, 0xc1, 0x3e,
  0x06, 0x64, 0xd2, 0x13, 0xda, 0x1b, 0x6e, 0x28, 0xdf, 0x5d, 0x7e, 0x32,
  0x2d, 0x2b, 0x1a, 0x68, 0x47, 0x2a, 0xfb, 0x97, 0xff, 0x61, 0xfb, 0xaf,
  0x23, 0xc4, 0xed, 0x5d, 0x6d, 0xc8, 0x17, 0x64, 0x56, 0x33, 0xf7, 0xf7,
  0xb0, 0x3e, 0x2b, 0x7e, 0x01, 0x84, 0x5d, 0x8e, 0xfe, 0x1b, 0x70, 0x0e,
  0x15, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60,
  0x82
};

const unsigned int font_Cursive1_raw_len = 212;
const uint32_t font_Cursive1_raw[font_Cursive1_raw_len] =
{
  0x81041108, 0x10c01002, 0x00040808, 0x00000000, 0x0e081804, 0xe0838007, 0x0c1878e0, 0x40000000, 0x3c704000, 0x8f073f08, 0x78f8f3c7, 0x90003e82, 0x08120448, 0x3f1efc78, 0x12e48f07, 0x41820409,
  0x0008873f, 0x100040e0, 0x00001000, 0x00300020, 0x08010840, 0x00000003, 0x00000000, 0x00000100, 0x00000000, 0x22851900, 0x11081063, 0x21c5c30f, 0x04101020, 0x00000215, 0x24080000, 0x81081118,
  0x88000182, 0x01041224, 0x20008000, 0x20144288, 0x02244888, 0x08828400, 0x06889000, 0x82840833, 0x41882021, 0x04091204, 0x04014144, 0xa0200004, 0x10000800, 0x00200000, 0x00400040, 0x00010800,
  0x00000000, 0x01000000, 0x00000000, 0x08000000, 0x00212281, 0x84040008, 0x00204102, 0x020e0220, 0x00000000, 0x01084410, 0xc1830201, 0x224410e0, 0x03010000, 0x990810f0, 0x08902014, 0x00010224,
  0x91000882, 0x89520508, 0x20418204, 0x12040190, 0x22282409, 0x00020402, 0x00001021, 0x8103170e, 0x3ce0e0e0, 0x0803185c, 0x70b10581, 0x170f5c38, 0x1182c307, 0x21448208, 0x208d081f, 0x00083021,
  0x80808304, 0x022000c0, 0x03800f15, 0x442000f0, 0x04070208, 0x20102180, 0x00002238, 0x08000002, 0x3f22a530, 0xc3270810, 0x08fe1ce1, 0x04089e00, 0x84044992, 0x810f3f41, 0x24091204, 0x04041410,
  0x00200001, 0x18110000, 0x10214284, 0x08624440, 0x06010901, 0x624488d1, 0x01881811, 0x92081102, 0x08022128, 0x10212085, 0x80040008, 0x00282141, 0x02040220, 0x00008000, 0x0c084440, 0x21808400,
  0x1e442010, 0x03010104, 0xa52010f0, 0x0890203e, 0x04010224, 0x91000882, 0x29120408, 0x2145f804, 0x11044100, 0x08282411, 0x80000408, 0x00000020, 0x04881021, 0x8440e023, 0x0f010842, 0x08910401,
  0x10214284, 0x11028107, 0x21109210, 0x20850804, 0x00001021, 0x5182c70f, 0x04100010, 0x80000200, 0x48800000, 0x07091008, 0x202041c2, 0x02000248, 0x20008000, 0x20419e00, 0x02444890, 0x08820801,
  0x04881021, 0x80081912, 0x81902042, 0xd8a02004, 0x04100844, 0x00204000, 0x11230000, 0x00620408, 0x08427c40, 0x04810801, 0x44880891, 0x41001023, 0x6ca03002, 0x08081f28, 0x10212085, 0x81040008,
  0x00e82004, 0x00000808, 0x41000001, 0x1f3e3000, 0x80810006, 0x1c3020c0, 0x40000000, 0x40204000, 0x8f0f3f41, 0xf000f287, 0x101e3e82, 0x0812e44f, 0x203d80f0, 0xc003018f, 0x08828840, 0x2000873f,
  0x000000e0, 0xc3071e1d, 0x0440f0a1, 0x08110442, 0x08918440, 0x101d7870, 0xd0c1800f, 0x01442440, 0x9044041f, 0x00008810, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00003c00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x01000000, 0x000000fe, 0x00000000, 0x00007800, 0x0000000e, 0x40000000,
  0x00000001, 0x00000000, 0x00001e00, 0x00000000,
};


// 846x9 @1bpp
const unsigned int font_Cursive2_png_len = 758;
const unsigned char font_Cursive2_png[font_Cursive2_png_len] =
{
  0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
  0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x03, 0x4e, 0x00, 0x00, 0x00, 0x09,
  0x01, 0x03, 0x00, 0x00, 0x00, 0x3f, 0xdb, 0xee, 0x8b, 0x00, 0x00, 0x00,
  0x06, 0x50, 0x4c, 0x54, 0x45, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xa5,
  0xd9, 0x9f, 0xdd, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00,
  0x00, 0x0e, 0xc4, 0x00, 0x00, 0x0e, 0xc4, 0x01, 0x95, 0x2b, 0x0e, 0x1b,
  0x00, 0x00, 0x00, 0x0f, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 0x66, 0x74,
  0x77, 0x61, 0x72, 0x65, 0x00, 0x47, 0x72, 0x61, 0x66, 0x78, 0x32, 0xa0,
  0xa2, 0x53, 0x6a, 0x00, 0x00, 0x02, 0x7b, 0x49, 0x44, 0x41, 0x54, 0x28,
  0x91, 0xbd, 0x93, 0xc1, 0x6b, 0xd4, 0x40, 0x14, 0xc6, 0xdf, 0x30, 0xcb,
  0x64, 0x85, 0x69, 0xd3, 0xda, 0x83, 0xb3, 0x34, 0xdd, 0x15, 0x14, 0xcf,
  0x13, 0x22, 0xcb, 0x8a, 0x0b, 0x59, 0x7b, 0xde, 0x7f, 0x40, 0xf0, 0x90,
  0xb0, 0x90, 0x22, 0x04, 0x29, 0x08, 0xb2, 0x87, 0x82, 0x59, 0xd7, 0x66,
  0x7b, 0x08, 0xac, 0xde, 0x52, 0x94, 0x82, 0x77, 0x0f, 0xd9, 0x4a, 0xa1,
  0xc7, 0x09, 0x81, 0xe8, 0x61, 0x8b, 0x9e, 0xa4, 0xc7, 0xd4, 0x42, 0xf5,
  0x18, 0xe8, 0xa5, 0x87, 0x52, 0x9c, 0x64, 0x6b, 0xc1, 0x5e, 0xbc, 0x99,
  0x40, 0xf2, 0x26, 0x0c, 0xef, 0x97, 0xef, 0xfb, 0xde, 0x00, 0xfc, 0xbf,
  0x8b, 0xd6, 0xfc, 0x78, 0xc8, 0x32, 0x5e, 0xad, 0xd6, 0xbc, 0x62, 0x4d,
  0xb4, 0x8a, 0xaa, 0x88, 0x24, 0xcf, 0x37, 0xb4, 0x79, 0xb9, 0x14, 0x20,
  0xfa, 0x6d, 0xcd, 0x54, 0xc6, 0x9f, 0x4f, 0xcf, 0xfa, 0xa9, 0x89, 0xc2,
  0x69, 0xe5, 0x26, 0xeb, 0x9f, 0xd7, 0x4d, 0x65, 0x74, 0x62, 0xd4, 0x82,
  0xb4, 0x67, 0x8e, 0x02, 0x94, 0x75, 0x80, 0x03, 0x03, 0xb0, 0xa0, 0x05,
  0x16, 0xc5, 0x14, 0x7b, 0x97, 0xcd, 0xd1, 0x65, 0xb1, 0x72, 0xb0, 0x7b,
  0x1c, 0x4a, 0xd4, 0xf8, 0xf8, 0x64, 0x12, 0xf1, 0x85, 0x8a, 0x8a, 0x4b,
  0xf4, 0x3d, 0xba, 0xb8, 0x15, 0x27, 0xc8, 0x0b, 0x9a, 0xcb, 0x04, 0xcb,
  0xbd, 0x56, 0xb0, 0xda, 0xd4, 0x83, 0xae, 0x83, 0xe1, 0x75, 0x4a, 0xd1,
  0x76, 0x40, 0x0c, 0x36, 0x4d, 0x0d, 0x3d, 0x78, 0xe4, 0x97, 0x28, 0x4c,
  0x08, 0x58, 0x99, 0x04, 0x95, 0xa8, 0xe2, 0x06, 0x8a, 0xae, 0xa3, 0x68,
  0xbc, 0x6b, 0x7b, 0x40, 0x17, 0x49, 0x8a, 0xed, 0xe8, 0x36, 0x27, 0x8d,
  0x61, 0xf1, 0x95, 0x39, 0x1a, 0x1a, 0xbc, 0x4a, 0x8e, 0x72, 0xe6, 0x18,
  0x04, 0x63, 0x9c, 0x73, 0xba, 0xdd, 0xd4, 0x43, 0xea, 0x48, 0xac, 0x44,
  0xbd, 0xa3, 0xca, 0xf3, 0x6d, 0x49, 0xd0, 0x43, 0x24, 0x51, 0x1f, 0xdd,
  0x26, 0x21, 0x18, 0xec, 0x08, 0x60, 0x7e, 0x19, 0x0f, 0xb2, 0x2c, 0xbf,
  0xef, 0x6a, 0x0a, 0x1d, 0x6c, 0xda, 0xeb, 0xad, 0x27, 0x73, 0xb7, 0x94,
  0x24, 0xd1, 0xc3, 0xd4, 0x31, 0x1a, 0xc1, 0x41, 0x64, 0xef, 0x03, 0x05,
  0x92, 0x08, 0x91, 0x01, 0x27, 0xaa, 0x2a, 0x70, 0x0e, 0xdc, 0xa1, 0x58,
  0xf1, 0x85, 0x1e, 0xf2, 0xb6, 0x21, 0xed, 0x94, 0xec, 0xd6, 0x5e, 0xcf,
  0x64, 0x74, 0x2d, 0x39, 0x7a, 0x7f, 0x41, 0xd1, 0x0e, 0x55, 0x4e, 0x1f,
  0x07, 0xd3, 0x9e, 0xa9, 0x0e, 0x0a, 0x54, 0x4b, 0xa3, 0x04, 0x79, 0xf6,
  0x02, 0xc0, 0xd2, 0x8a, 0xbf, 0x6a, 0x73, 0xab, 0xfb, 0x82, 0xe2, 0x39,
  0xe4, 0x4f, 0xc2, 0xae, 0xb3, 0xa4, 0x05, 0x68, 0xa8, 0x87, 0xdf, 0xdb,
  0x06, 0xa6, 0x12, 0x15, 0x16, 0x28, 0x61, 0x4f, 0xf6, 0x25, 0xaa, 0x56,
  0xaa, 0xb2, 0x1c, 0x3a, 0x0f, 0x69, 0x81, 0x72, 0x1a, 0x00, 0x85, 0x2a,
  0xbe, 0xf7, 0x72, 0xa6, 0x2a, 0x28, 0x55, 0x91, 0x4f, 0x0f, 0x82, 0xb3,
  0x35, 0x03, 0x62, 0x5f, 0x9f, 0x9c, 0xbb, 0x8c, 0x11, 0x10, 0xd2, 0x34,
  0x90, 0x6e, 0x92, 0x5e, 0x66, 0x4d, 0xe5, 0x9f, 0xaa, 0x05, 0x6a, 0xea,
  0x18, 0x4c, 0x19, 0x0c, 0xf5, 0xe8, 0x82, 0x19, 0x64, 0x86, 0x02, 0x50,
  0x7f, 0x26, 0x4f, 0x23, 0x58, 0xa8, 0x40, 0x99, 0x8c, 0x70, 0x29, 0xbb,
  0x31, 0xfa, 0x61, 0x47, 0xdc, 0xc5, 0xb3, 0xac, 0x60, 0x47, 0xda, 0xd5,
  0x4d, 0x31, 0x0a, 0x53, 0x7a, 0x47, 0x36, 0x34, 0x6a, 0xa1, 0x78, 0xa6,
  0xbf, 0x1d, 0xf8, 0x56, 0x76, 0x98, 0x32, 0x2e, 0xa3, 0x9a, 0xa1, 0x28,
  0xe9, 0x81, 0xb5, 0x21, 0x51, 0x73, 0x03, 0x89, 0xfa, 0xe2, 0x1a, 0x0c,
  0xe2, 0x21, 0xcf, 0xdc, 0x76, 0x83, 0x5e, 0xa9, 0x8a, 0x7d, 0xfe, 0x0b,
  0xaa, 0xd5, 0x32, 0x45, 0xdb, 0x6b, 0x99, 0x8d, 0x11, 0xc4, 0x22, 0xe3,
  0xad, 0xba, 0x8c, 0x41, 0x4e, 0x20, 0xef, 0x48, 0xbb, 0xc6, 0xa3, 0x53,
  0xc8, 0x53, 0xb3, 0xce, 0xbe, 0x9e, 0x18, 0xd5, 0x5c, 0x3c, 0xd4, 0xc7,
  0x68, 0x28, 0x3a, 0x5b, 0x29, 0x33, 0x47, 0x9e, 0x9e, 0x15, 0x43, 0x56,
  0x57, 0x92, 0x0f, 0xb9, 0x45, 0x1d, 0xb2, 0x44, 0x45, 0x3a, 0x09, 0xd7,
  0xfb, 0x0d, 0xa6, 0x7a, 0x47, 0xdf, 0x3a, 0x77, 0x1d, 0xdc, 0xf0, 0xdd,
  0x37, 0xfc, 0xf0, 0xaf, 0xc1, 0xc7, 0xd7, 0x4f, 0x02, 0x29, 0x9f, 0xed,
  0x7f, 0x9e, 0x18, 0x74, 0xf1, 0xa7, 0xea, 0xcb, 0x01, 0x99, 0x55, 0xd6,
  0x55, 0xb7, 0xfa, 0xec, 0xf5, 0x1b, 0x84, 0x39, 0xe5, 0x68, 0x14, 0x22,
  0x3c, 0xaa, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42,
  0x60, 0x82
};

const unsigned int font_Cursive2_raw_len = 212;
const uint32_t font_Cursive2_raw[font_Cursive2_raw_len] =
{
  0xc186190c, 0x30e01883, 0x80190808, 0x00000000, 0x0f041c06, 0xf0c3c007, 0x0e1c7cf0, 0xc0000000, 0x3c78c000, 0x8f073f1c, 0x78f8f3c7, 0x98013fc6, 0x181204cc, 0x3f1efc78, 0x33e68707, 0x63c68c19,
  0x018c873f, 0x300040e0, 0x00001800, 0x00380060, 0x0c030c60, 0x00008003, 0x00000000, 0x00800100, 0x00000000, 0xb2cd1d00, 0x190c98e3, 0xb1e6e38f, 0x041030b0, 0x0000030f, 0x260c0000, 0xc188110c,
  0x8c8001c3, 0x03061b36, 0x60008001, 0x3136428c, 0x03664c8c, 0x0cc68400, 0x068c9901, 0xc6cc1833, 0x418c3133, 0x8c193386, 0x060363c6, 0xe0600006, 0x18001800, 0x00600000, 0x00600060, 0x80010c00,
  0x00000000, 0x01000000, 0x00000080, 0x0c000000, 0x8061b2c1, 0xc606110c, 0x20b06103, 0x831f0630, 0x00000000, 0x011c6618, 0xe1c38281, 0x336618f0, 0x03030306, 0x990c30f0, 0x0c983136, 0x80010366,
  0x9b010cc6, 0x9973070c, 0x3163c68c, 0x33860198, 0x366cac19, 0x00030606, 0x0000b061, 0x81031b0e, 0x34f0e0e0, 0x0c071c6c, 0x70618581, 0x170d5c38, 0x31c3c307, 0x3366c698, 0xb0cd8c1f, 0x000cb861,
  0xc0c0c306, 0x063000e0, 0x03c00f0f, 0x663000f0, 0x8607030c, 0x309831c0, 0x0000333c, 0x18000006, 0x3f63b538, 0xc3670c18, 0x0cfe9ce1, 0x070c9e01, 0xcc8c59f3, 0x810f3f63, 0xac193386, 0x060c1c38,
  0x10618001, 0x1d130000, 0x30614286, 0x0c764c60, 0x86010d03, 0x664c98b1, 0x018c1c13, 0xd6983183, 0x0c03333c, 0x9861b0cd, 0xc006000c, 0x00b8b161, 0x83190630, 0x00000000, 0x0e0c6660, 0x31c0c600,
  0x1f663098, 0x03030000, 0xb53030f0, 0x0c98317f, 0x8c010366, 0x9b010cc6, 0x39b3060c, 0x3367f88c, 0x3186c100, 0x186cfcb1, 0xc0000618, 0x00000060, 0x068c1933, 0xcc60e063, 0x0f030c66, 0x98b18601,
  0x183366cc, 0x31838107, 0x3318feb0, 0xb0cd0c06, 0x00009861, 0x69c3e70f, 0x041000b0, 0x80010300, 0x6cc06000, 0x8709180c, 0x30b061e2, 0x0306036c, 0x60008001, 0x31639e00, 0x03c64c98, 0x0cc69801,
  0x068c1923, 0xc0981933, 0x8191316e, 0xd8e06086, 0x063018c6, 0x00606000, 0x19330000, 0x0063060c, 0x0c667c60, 0x86810d03, 0x6cc898b1, 0xc1001833, 0x6ce03083, 0x0c0c1f3c, 0x9861b0cd, 0xc106000c,
  0x00e83086, 0x00000808, 0x61008001, 0x1f3f3880, 0xc0c10087, 0x1e3830e0, 0xc0000306, 0x4030c000, 0x8f0f3f63, 0xf000f387, 0x181e3fc6, 0x0833e6cf, 0x313bc0f0, 0xc083018f, 0x18c68840, 0x3180873f,
  0x000000e0, 0xc3071e1d, 0x0c60f0a1, 0x0c130666, 0x98b1c6c0, 0x181f7870, 0xd0e1800f, 0x03662440, 0x906c861f, 0x0000d830, 0x00000000, 0x00000000, 0x00030000, 0x00000000, 0x00000000, 0x00000000,
  0x06000000, 0x00000000, 0x00003c00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x01000000, 0x000000fe, 0x00000000, 0x00007800, 0x0000000e, 0x60000000,
  0x00000003, 0x00000000, 0x00001e00, 0x00000000,
};




// cursive 8x8 (lite and bold)
const char* cursiveChars = "!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
bool cursiveUcaseOnly = false;

imgFont_t cursiveLite    = { "CursiveLite", IMGFONT_PNG, 1, font_Cursive1_png, font_Cursive1_png_len, cursiveUcaseOnly, cursiveChars, strlen( cursiveChars ), 846, 9,  8, 8 , 0  };
imgFont_t cursiveBold    = { "CursiveBold", IMGFONT_PNG, 1, font_Cursive2_png, font_Cursive2_png_len, cursiveUcaseOnly, cursiveChars, strlen( cursiveChars ), 846, 9,  8, 8 , 0  };

imgFont_t cursiveLiteRaw = { "CursiveLiteRaw", IMGFONT_RAW, 1, (uint8_t*)font_Cursive1_raw, font_Cursive1_raw_len, cursiveUcaseOnly, cursiveChars, strlen( cursiveChars ), 846, 8,  8, 8, 1 };
imgFont_t cursiveBoldRaw = { "CursiveBoldRaw", IMGFONT_RAW, 1, (uint8_t*)font_Cursive2_raw, font_Cursive2_raw_len, cursiveUcaseOnly, cursiveChars, strlen( cursiveChars ), 846, 8,  8, 8, 1 };

